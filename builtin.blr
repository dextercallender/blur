char intensityToChar(int i){
    
    char[] map = [' ', '.', '^', ',', ':', ';', 'I', 'l', '!', 'i', '>', '<', '~', '+', '_', '-', '?', ']', '[', '}', '{', '1', ')', '(', '|', '/', 't', 'f', 'j', 'r', 'x', 'n', 'u', 'v', 'c', 'z', 'X', 'Y', 'U', 'J', 'C', 'L', 'Q', 'O', '0', 'Z', 'm', 'w', 'q', 'p', 'd', 'b', 'k', 'h', 'a', 'o', '*', '#', 'M', 'W', '&', '8', '%', 'B', '@', '$'];

    int intensity = i % 255;
    int maplen = len(map);
    int factor = intensity * maplen; /* scale factor to map intensity (0-255) to char (0-len(map) */
    int index = factor / 255;
    return map[maplen - index];
}

int charToIntensity(char c){
    
    char[] map = ['$','@','B','%','8','&','W','M','#','*','o','a','h','k','b','d','p','q','w','m','Z','0','O','Q','L','C','J','U','Y','X','z','c','v','u','n','x','r','j','f','t','/','|','(',')','1','{','}','[',']','?','-','_','+','~','<','>','i','!','l','I',';',':',',','^','.',' ']; 

    int maplen = len(map);
    int idx = 0;
    int i;
    int intensity;

    for(i = 0; i < maplen; i = i + 1) {
        if(map[i] == c) {
            idx = i;
        }
    }

    intensity = (255 * idx) / maplen;
    return 255 - intensity;
}

/* offset = 0 for darken, offset = 1 for lighten */
char adjustPX(char c, int offset) {

    char[] map = ['$','@','B','%','8','&','W','M','#','*','o','a','h','k','b','d','p','q','w','m','Z','0','O','Q','L','C','J','U','Y','X','z','c','v','u','n','x','r','j','f','t','/','|','(',')','1','{','}','[',']','?','-','_','+','~','<','>','i','!','l','I',';',':',',','^','.',' ']; 
    
    int maplen = len(map);
    int idx = 0;
    int i;
    for(i = 0; i < maplen; i = i + 1) {
        if(map[i] == c) {
            idx = i;
        }
    }
    offset = offset - 1;
    return map[idx + offset];
}


